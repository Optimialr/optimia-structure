version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - infra-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_USER=${POSTGRES_USER:-postgres}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_POSTGRESDB_DATABASE=n8n
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_USER_MANAGEMENT_JWT_SECRET}
      - OLLAMA_HOST=ollama:11434
    volumes:
      - n8n_data:/home/node/.n8n
      - ./shared:/data/shared
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - infra-network

  n8n-test:
    image: n8nio/n8n:latest
    container_name: n8n-test
    restart: unless-stopped
    ports:
      - "5679:5678"
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_USER=${POSTGRES_USER:-postgres}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_POSTGRESDB_DATABASE=n8n_test
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_USER_MANAGEMENT_JWT_SECRET}
      - OLLAMA_HOST=ollama:11434
    volumes:
      - n8n_test_data:/home/node/.n8n
      - ./shared:/data/shared
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - infra-network

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - infra-network

  baserow:
    image: baserow/baserow:1.22.1
    container_name: baserow
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      BASEROW_PUBLIC_URL: ${BASEROW_HOSTNAME:-http://localhost:8080}
      DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/baserow
      REDIS_URL: redis://redis:6379
    volumes:
      - baserow_data:/baserow/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - infra-network

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - infra-network

  docuseal:
    image: docuseal/docuseal:latest
    container_name: docuseal
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/docuseal
    volumes:
      - docuseal_data:/data
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - infra-network

  caddy:
    image: caddy:2.7-alpine
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      N8N_HOSTNAME: ${N8N_HOSTNAME:-n8n.optimia.io}
      N8N_TEST_HOSTNAME: ${N8N_TEST_HOSTNAME:-n8n-test.optimia.io}
      BASEROW_HOSTNAME: ${BASEROW_HOSTNAME:-baserow.optimia.io}
      OLLAMA_HOSTNAME: ${OLLAMA_HOSTNAME:-ollama.optimia.io}
      DOCUSEAL_HOSTNAME: ${DOCUSEAL_HOSTNAME:-docuseal.optimia.io}
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
      - ./caddy_logs:/var/log/caddy
    depends_on:
      - n8n
      - n8n-test
      - ollama
      - baserow
      - docuseal
    networks:
      - infra-network

volumes:
  postgres_data:
  n8n_data:
  n8n_test_data:
  ollama_data:
  baserow_data:
  redis_data:
  docuseal_data:
  caddy_data:
  caddy_config:

networks:
  infra-network:
    driver: bridge